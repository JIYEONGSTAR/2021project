{"ast":null,"code":"import { createStore } from \"redux\";\nimport _data from \"./book.json\";\n\nfunction reducer(state, action) {\n  if (state === undefined) {\n    let mockData = _data.concat();\n\n    return {\n      selected_id: 1,\n      selected_subject: \"\",\n      bookListBySubject: [],\n      myBookList: [],\n      data: mockData\n    };\n  }\n\n  let newData = [...state.data];\n  let newMyBookList = [...state.myBookList];\n  let newBookListBySubject = [...state.bookListBySubject];\n  let newState;\n  let newSubject = {\n    selected_subject: action.subject\n  };\n  let newID = {\n    selected_id: action.id\n  }; //현재 선택한 값\n\n  let targetData = newData.find(currentData => {\n    return currentData.id === newID.selected_id;\n  });\n  let targetIndex = newMyBookList.findIndex(currentData => currentData.id === newID.selected_id);\n  let existData = newMyBookList.find(currentData => {\n    return currentData.id === newID.selected_id;\n  });\n  let targetDataBySubject = newData.filter(currentData => {\n    return currentData.subject === newSubject.selected_subject;\n  });\n\n  switch (action.type) {\n    case \"like\":\n      targetData.like += 1;\n      break;\n\n    case \"addMyList\":\n      if (targetData.stock <= 0) {\n        alert(\"더이상 빌릴 수 없습니다\");\n      } else if (existData === undefined) {\n        newMyBookList.push(targetData);\n        targetData.stock -= 1;\n      } else {\n        alert(\"이미 담겨 잇습니다.\");\n      } // newMyBookList.push(targetData);\n\n\n      break;\n\n    case \"removeMyList\":\n      newMyBookList.splice(targetIndex, 1);\n      targetData.stock += 1;\n      break;\n\n    case \"handleSubject\":\n      newBookListBySubject = [];\n      newBookListBySubject.push(targetDataBySubject);\n      break;\n\n    default:\n      break;\n  }\n\n  newState = { ...state,\n    data: newData,\n    myBookList: newMyBookList,\n    bookListBySubject: newBookListBySubject\n  };\n  return newState;\n}\n\nexport default createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","map":{"version":3,"sources":["/Users/jiyeong/Desktop/SHARE_BILLAGE/src/store.js"],"names":["createStore","_data","reducer","state","action","undefined","mockData","concat","selected_id","selected_subject","bookListBySubject","myBookList","data","newData","newMyBookList","newBookListBySubject","newState","newSubject","subject","newID","id","targetData","find","currentData","targetIndex","findIndex","existData","targetDataBySubject","filter","type","like","stock","alert","push","splice","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"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","sourcesContent":["import { createStore } from \"redux\";\nimport _data from \"./book.json\";\n\nfunction reducer(state, action) {\n  if (state === undefined) {\n    let mockData = _data.concat();\n    return {\n      selected_id: 1,\n      selected_subject: \"\",\n      bookListBySubject: [],\n      myBookList: [],\n      data: mockData,\n    };\n  }\n  let newData = [...state.data];\n  let newMyBookList = [...state.myBookList];\n  let newBookListBySubject = [...state.bookListBySubject];\n  let newState;\n  let newSubject = { selected_subject: action.subject };\n  let newID = { selected_id: action.id }; //현재 선택한 값\n  let targetData = newData.find((currentData) => {\n    return currentData.id === newID.selected_id;\n  });\n  let targetIndex = newMyBookList.findIndex(\n    (currentData) => currentData.id === newID.selected_id\n  );\n  let existData = newMyBookList.find((currentData) => {\n    return currentData.id === newID.selected_id;\n  });\n  let targetDataBySubject = newData.filter((currentData) => {\n    return currentData.subject === newSubject.selected_subject;\n  });\n  switch (action.type) {\n    case \"like\":\n      targetData.like += 1;\n      break;\n    case \"addMyList\":\n      if (targetData.stock <= 0) {\n        alert(\"더이상 빌릴 수 없습니다\");\n      } else if (existData === undefined) {\n        newMyBookList.push(targetData);\n        targetData.stock -= 1;\n      } else {\n        alert(\"이미 담겨 잇습니다.\");\n      }\n      // newMyBookList.push(targetData);\n      break;\n    case \"removeMyList\":\n      newMyBookList.splice(targetIndex, 1);\n      targetData.stock += 1;\n      break;\n    case \"handleSubject\":\n      newBookListBySubject = [];\n      newBookListBySubject.push(targetDataBySubject);\n      break;\n    default:\n      break;\n  }\n  newState = {\n    ...state,\n    data: newData,\n    myBookList: newMyBookList,\n    bookListBySubject: newBookListBySubject,\n  };\n  return newState;\n}\n\nexport default createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n"]},"metadata":{},"sourceType":"module"}